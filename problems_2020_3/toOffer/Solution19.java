package toOffer;

import java.util.Stack;
/*定义栈的数据结构，请在该类型中实现一个能够得到栈中所含最小元素的min函数（时间复杂度应为O（1））。
注意：保证测试中不会当栈为空的时候，对栈调用pop()或者min()或者top()方法。*/

public class Solution19 {
	Stack<Integer> elem = new Stack<Integer>();
    Stack<Integer> min = new Stack<Integer>();
    public void push(int node) {
        elem.push(node);
        if (min.empty() || node < min.peek()) {
            min.push(node);
        }
    }
    
    public void pop() {
        if (elem.pop() == min.peek()) {
            min.pop();
        }
    }
    
    public int top() {
        if (elem.empty()) return 0;
        return elem.peek();
    }
    
    public int min() {
        if (min.empty()) return 0;
        return min.peek();
    }
}
